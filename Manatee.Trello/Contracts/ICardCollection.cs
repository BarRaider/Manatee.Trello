using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Manatee.Trello
{
	/// <summary>
	/// A collection of cards.
	/// </summary>
	public interface ICardCollection : IReadOnlyCardCollection
	{
		/// <summary>
		/// Creates a new card.
		/// </summary>
		/// <param name="name">A name</param>
		/// <param name="description">(optional) A description</param>
		/// <param name="position">(optional) The card's position in the list.</param>
		/// <param name="dueDate">(optional) A due date.</param>
		/// <param name="isComplete">(optional) Indicates whether the card is complete.</param>
		/// <param name="members">(optional) A collection of members to add to the card.</param>
		/// <param name="labels">(optional) A collection of labels to add to the card.</param>
		/// <param name="ct">(Optional) A cancellation token for async processing.</param>
		/// <returns>The <see cref="ICard"/> generated by Trello.</returns>
		Task<ICard> Add(string name, string description = null, Position position = null, DateTime? dueDate = null,
		                bool? isComplete = null, IEnumerable<IMember> members = null, IEnumerable<ILabel> labels = null,
		                CancellationToken ct = default);

		/// <summary>
		/// Creates a new card by copying a card.
		/// </summary>
		/// <param name="source">A card to copy.  Default is null.</param>
		/// <param name="keep">(Optional) The inofrmation to keep. Default is <see cref="CardCopyKeepFromSourceOptions.None"/>.</param>
		/// <param name="ct">(Optional) A cancellation token for async processing.</param>
		/// <returns>The <see cref="ICard"/> generated by Trello.</returns>
		Task<ICard> Add(ICard source, CardCopyKeepFromSourceOptions keep = CardCopyKeepFromSourceOptions.None,
		                CancellationToken ct = default);

		/// <summary>
		/// Creates a new card by importing data from a URL.
		/// </summary>
		/// <param name="name">The name of the card to add.</param>
		/// <param name="sourceUrl"></param>
		/// <param name="ct">(Optional) A cancellation token for async processing.</param>
		/// <returns>The <see cref="ICard"/> generated by Trello.</returns>
		Task<ICard> Add(string name, string sourceUrl, CancellationToken ct = default);
	}
}